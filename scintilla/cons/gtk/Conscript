#!/usr/local/bin/perl
# Conscript for building the scintilla dll (with lexer)
#   Neil Hodgson provides a makefile to build this so we are no going to
#   duplicate that, however, to ensure rebuilding as necessary the
#   Command that call the makefile should have the proper dependencies
#   (i.e. inputs). In fact, to work with the build->src link they *must* all
#   be listed (this is a good thing). These will have to be kept in sync.

Import(
    'cons',
    'buildType',
    'mozPluginsDir',
    'unsiloedPythonExe',
    'scintillaBuildDir',
);

# this is what we want from the scintilla build process
$libName = '../bin/scintilla.a';

# build scintilla
my $makeFlags = "-fPIC -DCONTAINER_HANDLES_EVENTS=1 -DINCLUDE_DEPRECATED_FEATURES";
if ($buildType eq 'debug') {
    $makeFlags = "-DDEBUG=1";
}

# The SciMoz build on Linux explicitly links the Lex*.o files from the
# scintilla build AND with Cons multiple targets for a "Command" cannot be
# specified, so have to specify a makefile call for each platform.
my @lexers = ("Ada", "APDL", "Asn1", "AU3", "Asm", "AVE", "Baan", "Bash", "Basic",
    "Bullant", "Caml", "Conf", "CPP", "CSS", "CLW", "Cmake", "Crontab", "Csound", "D", "Eiffel", "EScript",
    "Erlang", "Flagship", "Forth", "Fortran", "GAP", "Gui4Cli", "Haskell", "HTML", "Inno", "Kix", "Lisp", "Lout",
    "Lua", "Matlab", "Metapost", "MMIXAL", "MPT", "MSSQL", "Nsis", "Opal", "Others",
    "PB", "Pascal", "Perl", "PLM", "Progress", "PS", "Python", "POV", "Rebol", "Ruby", "Scriptol", "Smalltalk",
    "Specman", "SQL", "Spice", "TADS3", "TeX", "Tcl", "UDL", "VB", "Verilog", "VHDL", "XSLT", "YAML");

my @args = (
    # the generated files
    # More specifically: the generated files that other segments of the Cons
    # system care about.
    [$libName],
    # the files needed to generate these
    "makefile",
    "deps.mak",
    "../include/Accessor.h",
    "../include/Face.py",
    "../include/HFacer.py",
    "../include/KeyWords.h",
    "../include/Platform.h",
    "../include/PropSet.h",
    "../include/SString.h",
    "../include/SciLexer.h",
    "../include/Scintilla.h",
    "../include/Scintilla.iface",
    "../include/ScintillaWidget.h",
    "../include/WindowAccessor.h",
    "../src/AutoComplete.cxx",
    "../src/AutoComplete.h",
    "../src/CallTip.cxx",
    "../src/CallTip.h",
    "../src/CellBuffer.cxx",
    "../src/CellBuffer.h",
    "../src/CharClassify.cxx",
    "../src/CharClassify.h",
    "../src/CharacterSet.h",
    "../src/ContractionState.cxx",
    "../src/ContractionState.h",
    "../src/Decoration.cxx",
    "../src/Decoration.h",
    "../src/Document.cxx",
    "../src/Document.h",
    "../src/DocumentAccessor.cxx",
    "../src/DocumentAccessor.h",
    "../src/Editor.cxx",
    "../src/Editor.h",
    "../src/ExternalLexer.cxx",
    "../src/ExternalLexer.h",
    "../src/Indicator.cxx",
    "../src/Indicator.h",
    "../src/KeyMap.cxx",
    "../src/KeyMap.h",
    "../src/KeyWords.cxx",
    "../src/LineMarker.cxx",
    "../src/LineMarker.h",
    "../src/Partitioning.h",
    "../src/PositionCache.cxx",
    "../src/PositionCache.h",
    "../src/PropSet.cxx",
    "../src/RESearch.cxx",
    "../src/RESearch.h",
    "../src/RunStyles.cxx",
    "../src/RunStyles.h",
    "../src/SVector.h",
    "../src/ScintillaBase.cxx",
    "../src/ScintillaBase.h",
    "../src/SplitVector.h",
    "../src/Style.cxx",
    "../src/Style.h",
    "../src/StyleContext.cxx",
    "../src/StyleContext.h",
    "../src/UniConversion.cxx",
    "../src/UniConversion.h",
    "../src/ViewStyle.cxx",
    "../src/ViewStyle.h",
    "../src/WindowAccessor.cxx",
    "../src/XPM.cxx",
    "../src/XPM.h",
    "Converter.h",
    "PlatGTK.cxx",
    "ScintillaGTK.cxx",
    "../bin/empty.txt",   # as for scintilla dist, only there to create bin dir

    "libpcre.a", # built and installed from contrib/pcre
    "../include/pcre.h", # installed from contrib/pcre
            );

sub _addLexer {
    my $cons = shift;
    my $name = shift;

    push(@args, "../src/Lex$name.cxx");
}

map { _addLexer($cons, $_); } @lexers;

push(@args, ("scintilla-marshal.h", "scintilla-marshal.c"));
push(@args, (qq(
             $unsiloedPythonExe bin/run-in-dir.py %1:d/../include/ chmod a+w Scintilla.h
             $unsiloedPythonExe bin/run-in-dir.py %1:d/../include/ chmod a+w SciLexer.h
             $unsiloedPythonExe bin/run-in-dir.py %1:d/../include/ python HFacer.py
             $unsiloedPythonExe bin/run-in-dir.py %1:d chmod a+w deps.mak
             $unsiloedPythonExe bin/run-in-dir.py %1:d make deps
             CXXFLAGS="$makeFlags" $unsiloedPythonExe bin/run-in-dir.py %1:d make -f %1:f $libName
             )));

$cons->Command(@args);




