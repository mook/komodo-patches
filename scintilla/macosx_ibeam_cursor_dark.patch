Scintilla: Mac OSX: use custom I-beam cursor to be visible on dark backgrounds
http://bugs.activestate.com/show_bug.cgi?id=91591

Index: src/scintilla/include/Platform.h
===================================================================
--- include/Platform.h	2012-01-10 17:03:53.000000000 -0800
+++ include/Platform.h	2012-01-10 17:01:07.000000000 -0800
@@ -399,18 +399,23 @@
 #if PLAT_MACOSX
 	void *windowRef;
 	void *control;
+
+	/** Cached i-beam cursor */
+	void *cursorIBeam;
 #endif
 public:
 	Window() : wid(0), cursorLast(cursorInvalid) {
 #if PLAT_MACOSX
 	  windowRef = 0;
 	  control = 0;
+	  cursorIBeam = 0;
 #endif
 	}
 	Window(const Window &source) : wid(source.wid), cursorLast(cursorInvalid) {
 #if PLAT_MACOSX
 	  windowRef = 0;
 	  control = 0;
+	  cursorIBeam = 0;
 #endif
 	}
 	virtual ~Window();
Index: src/scintilla/macosx/NSCursorWrappers.h
===================================================================
--- macosx/NSCursorWrappers.h	1969-12-31 16:00:00.000000000 -0800
+++ macosx/NSCursorWrappers.h	2012-01-10 17:02:02.000000000 -0800
@@ -0,0 +1,67 @@
+/*
+ Disclaimer: IMPORTANT:  This Apple software is supplied to you by Apple Computer, Inc.
+ ("Apple") in consideration of your agreement to the following terms, and your
+ use, installation, modification or redistribution of this Apple software
+ constitutes acceptance of these terms.  If you do not agree with these terms,
+ please do not use, install, modify or redistribute this Apple software.
+ 
+ In consideration of your agreement to abide by the following terms, and subject
+ to these terms, Apple grants you a personal, non-exclusive license, under Apple's
+ copyrights in this original Apple software (the "Apple Software"), to use,
+ reproduce, modify and redistribute the Apple Software, with or without
+ modifications, in source and/or binary forms; provided that if you redistribute
+ the Apple Software in its entirety and without modifications, you must retain
+ this notice and the following text and disclaimers in all such redistributions of
+ the Apple Software.  Neither the name, trademarks, service marks or logos of
+ Apple Computer, Inc. may be used to endorse or promote products derived from the
+ Apple Software without specific prior written permission from Apple.  Except as
+ expressly stated in this notice, no other rights or licenses, express or implied,
+ are granted by Apple herein, including but not limited to any patent rights that
+ may be infringed by your derivative works or by other works in which the Apple
+ Software may be incorporated.
+ 
+ The Apple Software is provided by Apple on an "AS IS" basis.  APPLE MAKES NO
+ WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED
+ WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ PURPOSE, REGARDING THE APPLE SOFTWARE OR ITS USE AND OPERATION ALONE OR IN
+ COMBINATION WITH YOUR PRODUCTS.
+ 
+ IN NO EVENT SHALL APPLE BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL OR
+ CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
+ GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ ARISING IN ANY WAY OUT OF THE USE, REPRODUCTION, MODIFICATION AND/OR DISTRIBUTION
+ OF THE APPLE SOFTWARE, HOWEVER CAUSED AND WHETHER UNDER THEORY OF CONTRACT, TORT
+ (INCLUDING NEGLIGENCE), STRICT LIABILITY OR OTHERWISE, EVEN IF APPLE HAS BEEN
+ ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ 
+	Copyright © 2006 Apple Computer, Inc., All Rights Reserved
+ */
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+// CursorRef is used here to allow main.c to compile as a plain C file.  If main.c
+// were compiled as an Objective-C file (change File Type in Xcode's Info window),
+// then this file could include Cocoa/Cocoa.h and could use NSCursor directly in the
+// prototypes.
+typedef void *CursorRef;
+
+//	C-based wrapper routines around NSCursor
+/**
+ * Create a cursor from the given image data byte buffer
+ * @param bytes Pointer to memory containing image data
+ * @param length The number of bytes of image data
+ * @param hotSpotX The X offset of the cursor hotspot
+ * @param hotSpotY The Y offset of the cursor hotspot
+ */
+CursorRef CreateCocoaCursorFromBytes( const void* bytes, unsigned int length, float hotSpotX, float hotSpotY );
+
+void	ReleaseCocoaCursor( CursorRef cursor );
+void	SetCocoaCursor( CursorRef cursor );
+void	HideNSCursor();
+void	ShowNSCursor();
+
+#ifdef __cplusplus
+} /* extern "C" */
+#endif /* __cplusplus */
Index: src/scintilla/macosx/NSCursorWrappers.m
===================================================================
--- macosx/NSCursorWrappers.m	1969-12-31 16:00:00.000000000 -0800
+++ macosx/NSCursorWrappers.m	2012-01-10 17:02:02.000000000 -0800
@@ -0,0 +1,93 @@
+/*
+ File:    NSCursorWrappers.m
+ 
+ Abstract:  Provide Carbon wrapper functions around the Cocoa NSCursor methods we
+        use to handle our cursor support.
+  
+ 
+ Version:  1.0
+ 
+ Disclaimer:  IMPORTANT:  This Apple software is supplied to you by Apple Computer, Inc.
+ ("Apple") in consideration of your agreement to the following terms, and your
+ use, installation, modification or redistribution of this Apple software
+ constitutes acceptance of these terms.  If you do not agree with these terms,
+ please do not use, install, modify or redistribute this Apple software.
+ 
+ In consideration of your agreement to abide by the following terms, and subject
+ to these terms, Apple grants you a personal, non-exclusive license, under Apple's
+ copyrights in this original Apple software (the "Apple Software"), to use,
+ reproduce, modify and redistribute the Apple Software, with or without
+ modifications, in source and/or binary forms; provided that if you redistribute
+ the Apple Software in its entirety and without modifications, you must retain
+ this notice and the following text and disclaimers in all such redistributions of
+ the Apple Software.  Neither the name, trademarks, service marks or logos of
+ Apple Computer, Inc. may be used to endorse or promote products derived from the
+ Apple Software without specific prior written permission from Apple.  Except as
+ expressly stated in this notice, no other rights or licenses, express or implied,
+ are granted by Apple herein, including but not limited to any patent rights that
+ may be infringed by your derivative works or by other works in which the Apple
+ Software may be incorporated.
+ 
+ The Apple Software is provided by Apple on an "AS IS" basis.  APPLE MAKES NO
+ WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED
+ WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ PURPOSE, REGARDING THE APPLE SOFTWARE OR ITS USE AND OPERATION ALONE OR IN
+ COMBINATION WITH YOUR PRODUCTS.
+ 
+ IN NO EVENT SHALL APPLE BE LIABLE FOR ANY SPECIAL, INDIRECT, INCIDENTAL OR
+ CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
+ GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ ARISING IN ANY WAY OUT OF THE USE, REPRODUCTION, MODIFICATION AND/OR DISTRIBUTION
+ OF THE APPLE SOFTWARE, HOWEVER CAUSED AND WHETHER UNDER THEORY OF CONTRACT, TORT
+ (INCLUDING NEGLIGENCE), STRICT LIABILITY OR OTHERWISE, EVEN IF APPLE HAS BEEN
+ ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ 
+ Copyright © 2006 Apple Computer, Inc., All Rights Reserved
+ */
+
+#import <Cocoa/Cocoa.h>
+#import "NSCursorWrappers.h"
+
+//  From "Cocoa Drawing Guide: Working with Images"
+// http://developer.apple.com/legacy/mac/library/samplecode/CarbonCocoa_PictureCursor/
+
+/**
+ * Create a cursor from the given image data byte buffer
+ * @param bytes Pointer to memory containing image data
+ * @param length The number of bytes of image data
+ * @param hotSpotX The X offset of the cursor hotspot
+ * @param hotSpotY The Y offset of the cursor hotspot
+ */
+CursorRef CreateCocoaCursorFromBytes( const void* bytes, unsigned int length, float hotSpotX, float hotSpotY )
+{
+    NSData *data = [NSData dataWithBytes:bytes length:length];
+    NSImage *image = [[NSImage alloc] initWithData:data];
+    [data release];
+    if (!image) {
+        [image release];
+        return (CursorRef)0;
+    }
+    NSCursor *cursor = [[NSCursor alloc] initWithImage:image hotSpot:NSMakePoint(hotSpotX, hotSpotY)];
+    [image release];
+    return (CursorRef)cursor;
+}
+
+void  ReleaseCocoaCursor( CursorRef cursor )
+{
+  [(NSCursor *)cursor release];
+}
+
+void  SetCocoaCursor( CursorRef cursor )
+{
+  [(NSCursor *)cursor set];
+}
+
+void  HideCocoaCursor()
+{
+  [NSCursor hide];
+}
+
+void  ShowCocoaCursor()
+{
+  [NSCursor unhide];
+}
Index: src/scintilla/macosx/PlatMacOSX.cxx
===================================================================
--- macosx/PlatMacOSX.cxx	2012-01-10 17:03:53.000000000 -0800
+++ macosx/PlatMacOSX.cxx	2012-01-10 17:00:54.000000000 -0800
@@ -23,6 +23,7 @@
 #include "Scintilla.h"
 #include "PlatMacOSX.h"
 #include "XPM.h"
+#include "NSCursorWrappers.h"
 
 using namespace Scintilla;
 
@@ -852,6 +853,10 @@
         DisposeWindow(reinterpret_cast<WindowRef>( windowRef ));
     }
     wid = 0;
+    if (cursorIBeam) {
+        ReleaseCocoaCursor((CursorRef)cursorIBeam);
+        cursorIBeam = 0;
+    }
 }
 
 bool Window::HasFocus() {
@@ -961,6 +966,18 @@
     // TODO: Do I need to implement this? MSDN: specifies the font that a control is to use when drawing text.
 }
 
+static const unsigned char kIBeamData[] = {
+    // PNG data of the i-beam cursor, see bug 91591
+    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
+    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x08, 0x04, 0x00, 0x00, 0x00, 0xb5, 0xfa, 0x37,
+    0xea, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0b, 0x13, 0x00, 0x00, 0x0b,
+    0x13, 0x01, 0x00, 0x9a, 0x9c, 0x18, 0x00, 0x00, 0x00, 0x32, 0x49, 0x44, 0x41, 0x54, 0x28, 0xcf,
+    0x63, 0xf8, 0x1f, 0x1a, 0xfa, 0x9f, 0xe1, 0x3f, 0x10, 0x31, 0xfc, 0x5f, 0x05, 0x67, 0x21, 0x41,
+    0x08, 0xb5, 0x0a, 0x28, 0xb1, 0x0a, 0x53, 0x12, 0xa1, 0x80, 0x01, 0x97, 0xf4, 0x90, 0x52, 0xb0,
+    0x0a, 0x42, 0x0d, 0x7d, 0x5f, 0xe0, 0x8e, 0x2c, 0x02, 0xd1, 0x0d, 0x00, 0x48, 0x0d, 0x0d, 0x02,
+    0x8c, 0xac, 0xe9, 0x2a, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82,
+};
+
 void Window::SetCursor(Cursor curs) {
     if (wid) {
         // TODO: This isn't really implemented correctly. I should be using
@@ -969,7 +986,11 @@
 
         switch ( curs ) {
             case cursorText:
-                cursor = kThemeIBeamCursor;
+                if (!cursorIBeam) {
+                    cursorIBeam = CreateCocoaCursorFromBytes(kIBeamData, sizeof(kIBeamData), 6, 10);
+                }
+                SetCocoaCursor(cursorIBeam);
+                return;
                 break;
             case cursorArrow:
                 cursor = kThemeArrowCursor;
Index: src/scintilla/macosx/makefile
===================================================================
--- macosx/makefile	2012-01-10 17:03:53.000000000 -0800
+++ macosx/makefile	2012-01-10 17:19:19.000000000 -0800
@@ -5,7 +5,7 @@
 # This makefile assumes that Apple's version of GCC 3.1 is used and changes will be needed to use other compilers.
 # GNU make does not like \r\n line endings so should be saved to CVS in binary form.
 
-.SUFFIXES: .cxx .c .o .h .a
+.SUFFIXES: .m .cxx .c .o .h .a
 CC = g++
 CCOMP = gcc
 LIBTOOL = libtool
@@ -76,14 +76,14 @@
 	rm -f *.o $(COMPLIB)
 
 deps:
-	$(CC) -MM -DSCI_NAMESPACE -DMACOSX -DSCI_LEXER  $(CXXFLAGS) $(INCLUDEDIRS) *.cxx ../src/*.cxx ../lexlib/*.cxx ../src/*.cxx >deps.mak
+	$(CC) -MM -DSCI_NAMESPACE -DMACOSX -DSCI_LEXER  $(CXXFLAGS) $(INCLUDEDIRS) *.m *.cxx ../src/*.cxx ../lexlib/*.cxx ../src/*.cxx >deps.mak
 
 COMPLIB=Accessor.o CharacterSet.o LexerBase.o LexerModule.o LexerSimple.o StyleContext.o WordList.o \
 	CharClassify.o Decoration.o Document.o PerLine.o Catalogue.o CallTip.o \
 	ScintillaBase.o ContractionState.o Editor.o ExternalLexer.o PropSetSimple.o PlatMacOSX.o \
 	KeyMap.o LineMarker.o PositionCache.o ScintillaMacOSX.o CellBuffer.o ViewStyle.o \
 	RESearch.o RunStyles.o Selection.o Style.o Indicator.o AutoComplete.o UniConversion.o XPM.o \
-        TCarbonEvent.o TView.o ScintillaCallTip.o $(EXTOBS) \
+        TCarbonEvent.o TView.o ScintillaCallTip.o NSCursorWrappers.o $(EXTOBS) \
 	$(LEXOBJS)
 
 ../bin/$(STATICLIB): $(COMPLIB) libpcre.a
